package com.$4_FaceObject;

/*
    面向对象学习重点:
        1. 学习java提供的对象并使用
        2. 学习如何自己设计对象并使用
        3. 面向对象的语法知识
            三大特征:封装, 继承, 多态
    类(设计图):是对象共同特征的描述
        一个java文件中可以定义多个class类, 且只能有一个类是public修饰, 而且public修饰的类名必须为代码文件名！！
    对象:是真实存在的具体实例
        在java中必须先设计类, 才能获得对象
    类的定义格式:
        public class 类名 {
            1.成员变量:
                完整定义格式:
                    修饰符 数据类型 变量名称 = 初始化值;(一般无需初始化值, 存在默认值)
            2.成员方法
            3.构造器(构造方法):
                作用:用于初始化一个类的对象, 并返回对象的地址
                定义格式:
                    修饰名 类名(形参列表) {
                        方法体;
                    }
                分类:
                    无参构造器:默认存在的, 初始化对象时, 成员变量均采用默认值
                    有参构造器:在初始化对象时, 同时可以为对象赋值
                注意:
                    1.任何类定义出来默认带有无参构造器
                    2.一旦定义带参构造器, 无参构造器就消失了, 需要自己重新定义一个无参构造器
            4.代码块
            5.内部类.txt
        }
    创建类的对象:
        类名 对象名 = new 类名();
      如何使用对象:
        访问属性:对象名.成员变量
        访问方法:对象名.方法名();
    对象内存中相关知识:
        1. 对象放在堆内存区域
        2. 创建对象时, 对象名中存储的是对象在堆内存中的位置
        3. 成员变量的数据在内存中的位置:成员变量的数据属于对象, 存在于堆内存中
    this关键字:
        this修饰的变量用于指代成员变量，其主要作用是（区分局部变量和成员变量的重名问题）
            * 方法的形参如果与成员变量同名，不带this修饰的变量指的是形参，而不是成员变量
            * 方法的形参没有与成员变量同名，不带this修饰的变量指的是成员变量
    成员变量和局部变量区别:
        1.类中位置不同：成员变量（类中方法外）局部变量（方法内部或方法声明上）
        2.内存中位置不同：成员变量（堆内存）局部变量（栈内存）
        3.生命周期不同：成员变量（随着对象的存在而存在，随着对象的消失而消失）局部变量（随着方法的调用而存在，随着方法的调用完毕而消失）
        4.初始化值不同：成员变量（有默认初始化值）局部变量（没有默认初始化值，必须先定义，赋值才能使用）
 */

public class $1_FaceObjectSummarize {
}
