package com.$22_DesignMode;

/*
    设计模式:
        工厂模式(Factory Pattern):
            是Java中最常用的设计模式之一, 属于创建型模式, 提供了一种获取对象的方式
            作用:
                1. 工厂的方法可以封装对象的创建细节, 比如: 为该对象进行加工和数据注入
                2. 可以实现类与类之间的解耦操作(核心思想)
        装饰模式():
            创建一个新类, 包装原始类, 从而在新类中提升原来类的功能
            作用:
                1. 在不改变原来类的基础上, 动态的扩展一个类的功能
 */

public class $1_DesignMode {
}
